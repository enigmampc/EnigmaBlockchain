# Simple usage with a mounted data directory:
# > docker build -t enigma .
# > docker run -it -p 26657:26657 -p 26656:26656 -v ~/.secretd:/root/.secretd -v ~/.secretcli:/root/.secretcli enigma secretd init
# > docker run -it -p 26657:26657 -p 26656:26656 -v ~/.secretd:/root/.secretd -v ~/.secretcli:/root/.secretcli enigma secretd start
FROM baiduxlab/sgx-rust:1804-1.1.2 AS build-env-rust-go

ENV PATH="/root/.cargo/bin:$PATH"
ENV GOROOT=/usr/local/go
ENV GOPATH=/go/
ENV PATH=$PATH:/usr/local/go/bin:$GOPATH/bin


RUN curl -O https://dl.google.com/go/go1.14.2.linux-amd64.tar.gz
RUN tar -C /usr/local -xzf go1.14.2.linux-amd64.tar.gz
# Set working directory for the build

WORKDIR /go/src/github.com/enigmampc/SecretNetwork/

ARG SGX_MODE=SW
ENV SGX_MODE=${SGX_MODE}
ENV MITIGATION_CVE_2020_0551=LOAD

COPY third_party/build third_party/build

# Add source files
COPY go-cosmwasm/ go-cosmwasm/
COPY cosmwasm/ cosmwasm/

WORKDIR /go/src/github.com/enigmampc/SecretNetwork/

COPY Makefile Makefile

# RUN make clean
RUN make vendor

WORKDIR /go/src/github.com/enigmampc/SecretNetwork/go-cosmwasm

COPY api_key.txt /go/src/github.com/enigmampc/SecretNetwork/cosmwasm/packages/wasmi-runtime/
COPY spid.txt /go/src/github.com/enigmampc/SecretNetwork/cosmwasm/packages/wasmi-runtime/

RUN . /opt/sgxsdk/environment && env && SGX_MODE=${SGX_MODE} make build-rust

# Set working directory for the build
WORKDIR /go/src/github.com/enigmampc/SecretNetwork

# Add source files
COPY go-cosmwasm go-cosmwasm
COPY x x
COPY types types
COPY app.go .
COPY go.mod .
COPY go.sum .
COPY cmd cmd
COPY Makefile .

# COPY /go/src/github.com/enigmampc/SecretNetwork/go-cosmwasm/libgo_cosmwasm.so go-cosmwasm/api

RUN . /opt/sgxsdk/environment && env && MITIGATION_CVE_2020_0551=LOAD SGX_MODE=${SGX_MODE} make build_local_no_rust

# Final image
FROM cashmaney/enigma-sgx-base

# wasmi-sgx-test script requirements
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    #### Base utilities ####
    git \
    make \
    wget && \
    rm -rf /var/lib/apt/lists/*

ARG VERSION="v0.5.0-rc1"
ARG SGX_MODE=SW
ENV VERSION=${VERSION}
ENV SGX_MODE=${SGX_MODE}

# Install ca-certificates
WORKDIR /root

RUN mkdir -p ./go-cosmwasm/api/

# COPY .git .git
COPY Makefile .

# Copy over binaries from the build-env
COPY --from=build-env-rust-go /go/src/github.com/enigmampc/SecretNetwork/go-cosmwasm/target/release/libgo_cosmwasm.so ./go-cosmwasm/api/
COPY --from=build-env-rust-go /go/src/github.com/enigmampc/SecretNetwork/go-cosmwasm/librust_cosmwasm_enclave.signed.so ./go-cosmwasm/
COPY --from=build-env-rust-go /go/src/github.com/enigmampc/SecretNetwork/secretd secretd
COPY --from=build-env-rust-go /go/src/github.com/enigmampc/SecretNetwork/secretcli secretcli

COPY ./packaging_ubuntu packaging_ubuntu
COPY ./packaging_docker/build_deb.sh .

RUN chmod +x build_deb.sh

# Run secretd by default, omit entrypoint to ease using container with secretcli
CMD ["/bin/bash", "build_deb.sh"]
